# 간략한 내용정리

@ 인터페이스를 짧게 유지하자
- 클래스를 작게 유지하는 일의 중요성은 계속 언급해왔다.
- 클래스를 작게 만드는것이 중요하다면 -> 인터페이스를 작게 만드는 것은 훨씬 더 중요하다.
- 클래스가 다수의 인터페이스를 구현하기 때문이다.

@ 스마트 클래스의 사용
- 스마트 클래스를 인터페이스와 함께 제공해야 하는 또 다른 이유는 인터페이스를 구현하는 서로 다른 클래스 안에 동일한 기능을 반복해서 구현하고 싶지 않기 때문이다.
- 기본적으로 인터페이스를 짧게 만들고 '스마트' 클래스를 인터페이스와 함께 배포함으로써 공통 기능을 추출하고 코드 중복을 피할 수 있다.

# 느낀점
- 인터페이스는 다중 상속이 가능하기 때문에 인터페이스를 짧게 유지해야, override해야 하는 메소드가 많아지는것을 막을 수 있다.
- 스마트 클래스를 사용해서 동일한 기능의 중복을 피할 수 있으며, 해당 예제를 좀 더 살펴봐야겠다.

# 궁금한 점
---

# 찾아봐야 할 것 
- 인터페이스의 중첩 클래스
